import { collection, onSnapshot, query } from "firebase/firestore";
import { db } from "../firebase";
import { EntityServerGet, OnSnapshotCollectionService } from "../types";
import { {{entityInterface}} } from "./types";
import { transformMetadata } from '../utils';

const onSnapshotCollection: OnSnapshotCollectionService<{{entityInterface}}> = (
  opts,
  callback
) => {
  const collectionRef = collection(db, `/{{entityName}}`);
  const q = opts.listQueryFn
    ? opts.listQueryFn(collectionRef)
    : query(collectionRef);
  return onSnapshot(q, (querySnap) => {
    callback(
      querySnap.docs.map(
        (doc) =>
          (transformMetadata({
            ...doc.data(),
            id: doc.id,
          } as EntityServerGet<{{entityInterface}}>, doc.metadata))
      )
    );
  });
};

export default onSnapshotCollection;
